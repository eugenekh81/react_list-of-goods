{"version":3,"sources":["components/GoodsList.tsx","components/SelectOptions.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","SelectOptions","state","selectOptions","this","selectOption","value","React","PureComponent","goodsFromServer","App","isReversed","sortBy","selectValue","sortAlphabet","setState","sortLength","reverseList","resetList","selectChange","event","target","visibleGoods","filter","length","sort","good1","good2","localeCompare","reverse","type","onClick","htmlFor","id","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,cAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,SCLJC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAF/C,4CAKE,WACE,IAAQA,EAAkBC,KAAKF,MAAvBC,cAER,OACE,mCACGA,EAAcJ,KAAI,SAAAM,GAAY,OAC7B,wBAEEC,MAAOD,EAFT,SAIGA,GAHIA,YAZjB,GAAmCE,IAAMC,eCDnCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACER,MAAQ,CACNS,YAAY,EACZC,OAAQ,GACRC,YAAa,GAJjB,EAOEC,aAAe,WACb,EAAKC,SAAS,CAAEH,OAAQ,cAR5B,EAWEI,WAAa,WACX,EAAKD,SAAS,CAAEH,OAAQ,YAZ5B,EAeEK,YAAc,WACZ,EAAKF,UAAS,SAAAb,GAAK,MAAK,CACtBS,YAAaT,EAAMS,gBAjBzB,EAqBEO,UAAY,WACV,EAAKH,SAAS,CACZJ,YAAY,EACZC,OAAQ,GACRC,YAAa,KAzBnB,EA6BEM,aAAe,SAACC,GACd,EAAKL,SAAS,CACZF,aAAcO,EAAMC,OAAOf,SA/BjC,4CAmCE,WACE,MAIIF,KAAKF,MAHPS,EADF,EACEA,WACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,YAGIS,EAAeb,EAAgBc,QACnC,SAAAvB,GAAI,OAAIA,EAAKwB,QAAUX,KAoBzB,OAjBAS,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,IAAK,WACH,OAAOc,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITb,GACFW,EAAaO,UAIb,sBAAK/B,UAAU,MAAf,UACE,uCACA,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,SAASgC,KAAK,SAASC,QAAS3B,KAAKa,YAAvD,0BAIA,wBAAQnB,UAAU,SAASgC,KAAK,SAASC,QAAS3B,KAAKU,aAAvD,8BAIA,wBAAQhB,UAAU,SAASgC,KAAK,SAASC,QAAS3B,KAAKY,WAAvD,4BAIA,wBAAQlB,UAAU,SAASgC,KAAK,SAASC,QAAS3B,KAAKc,UAAvD,mBAIA,wBAAQpB,UAAU,SAASgC,KAAK,SAAhC,SACE,wBAAOE,QAAQ,aAAf,UACG,WAED,wBACEC,GAAG,aACHC,SAAU9B,KAAKe,aAFjB,SAIE,cAAC,EAAD,cAOR,cAAC,EAAD,CAAWtB,MAAOyB,WAlG1B,GAAyBf,IAAM4B,WAwGhBzB,IC7Hf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6485bbf.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"Goods__list\">\n      {goods.map(good => (\n        <li key={good}>{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype State = {\n  selectOptions: number[],\n};\n\nexport class SelectOptions extends React.PureComponent<{}, State> {\n  state = {\n    selectOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  };\n\n  render() {\n    const { selectOptions } = this.state;\n\n    return (\n      <>\n        {selectOptions.map(selectOption => (\n          <option\n            key={selectOption}\n            value={selectOption}\n          >\n            {selectOption}\n          </option>\n        ))}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { SelectOptions } from './components/SelectOptions';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReversed: boolean,\n  sortBy: string,\n  selectValue: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortBy: '',\n    selectValue: 1,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      selectValue: 1,\n    });\n  };\n\n  selectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectValue: +event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n      selectValue,\n    } = this.state;\n\n    const visibleGoods = goodsFromServer.filter(\n      good => good.length >= selectValue,\n    );\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <div className=\"buttons\">\n          <button className=\"button\" type=\"button\" onClick={this.reverseList}>\n            Reverse list\n          </button>\n\n          <button className=\"button\" type=\"button\" onClick={this.sortAlphabet}>\n            Sort by alphabet\n          </button>\n\n          <button className=\"button\" type=\"button\" onClick={this.sortLength}>\n            Sort by length\n          </button>\n\n          <button className=\"button\" type=\"button\" onClick={this.resetList}>\n            Reset\n          </button>\n\n          <button className=\"button\" type=\"button\">\n            <label htmlFor=\"selectList\">\n              {'Select: '}\n\n              <select\n                id=\"selectList\"\n                onChange={this.selectChange}\n              >\n                <SelectOptions />\n              </select>\n            </label>\n\n          </button>\n\n        </div>\n        <GoodsList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}